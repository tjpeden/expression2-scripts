@name Stabilization
@persist E:entity A:angle

#E is the stabilized entity
#A is the target angle

runOnTick(1)

if( first() ) {
    E = entity():isWeldedTo()
    A = E:angles()
}

TarQ = quat(A) #Calculate quaternion for target orientation
CurQ = quat(E) #Calculate current orientation quaternion

#TarQ/CurQ is a quaternion representing the rotation that will rotate the object from current orientation to the target one.
Q = TarQ/CurQ

#applyTorque() works on intrinsic vectors! Get the rotation vector and transform it.
V = E:toLocal(rotationVector(Q)+E:pos())
#Alternatively, can use "V = transpose(matrix(E))*rotationVector(Q)"

#Apply torque. angVelVector() works like a delta term.
#Factors 150 and 12 can be adjusted to achieve best effect.
E:applyTorque((150*V - 12*E:angVelVector())*E:inertia())  

#This is only to stop movement, but it won't make the object float.
#Disable gravity for the entity or write some code for floating if you want to see how this expression works.
E:applyForce(-E:vel()*E:mass())
