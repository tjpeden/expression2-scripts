@name DCPC Server Console
@inputs 
@outputs 
@persist Password:string Authenticated
@trigger 

if(first()|duped()) {
    dsJoinGroup("DCPC.RCon")
    Authenticated=0
    Password="password"
    function table newAttribs() {
        local RetT=table()
        RetT["FG", number]=999
        RetT["BG", number]=0
        RetT["Flash", number]=0
        return RetT
    }
    function number table:atFG() {
        return This["FG", number]
    }
    function number table:atBG() {
        return This["BG", number]
    }
    function number table:atFlash() {
        return This["Flash", number]
    }
    function void table:atSetFG(FG) {
        This["FG", number]=FG
    }
    function void table:atSetBG(BG) {
        This["BG", number]=BG
    }
    function void table:atSetFlash(Flash) {
        This["Flash", number]=Flash
    }
    function vector table:atToColorVec() {
        local FG=This:atFG()
        local R=(FG/100)%10
        local G=(FG/10)%10
        local B=FG%10
        return vec(R*(255/9), G*(255/9), B*(255/9))
    }
    function void dsWriteLines(Str:string, Attribs:table) {
        Params=table()
        Params["Str", string]=Str
        Params["Attribs", table]=Attribs
        dsSendDirect("DCPC.WriteLines", dsGetSender(), Params)
    }
}

if(dsClk("DCPC.Connect")) {
    dsWriteLines("Please log in.", newAttribs())
    Authenticated=0
}

if(dsClk("DCPC.Shell")) {
    Command=dsGetTable()["Command", string]
    if(!Authenticated) {
        if(Command==Password) {
            dsSendDirect("DCPC.Clear", dsGetSender(), 0)
            dsWriteLines("You are now authentic.", newAttribs())
            Authenticated=1
        } else {
            dsWriteLines("Password incorrect.", newAttribs())
        }
    } else {
        concmd("ulx rcon "+Command)
    }
}
